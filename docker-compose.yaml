services:
  api:
    build: ./CMS-WEB-BACKEND/backend
    restart: always
    ports:
      - "8000:8000"
    # python detect_postgres.py para que no se conecte antes que postgres este listo
    command: >
      sh -c " python detect_postgres.py && 
              python manage.py makemigrations &&
              python manage.py makemigrations api &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./CMS-WEB-BACKEND:/CMS-WEB-BACKEND/backend
    env_file:
      - ./CMS-WEB-BACKEND/backend/backend/.env
    depends_on:
      - database

  web:
    build: ./CMS-WEB-FRONTEND
    ports:
      - "5173:5173"
      - "51204:51204"
    volumes:
      - ./CMS-WEB-FRONTEND:/CMS-WEB-FRONTEND
    depends_on:
      - database

    
  web-test:
    build: ./CMS-WEB-FRONTEND
    command: sh -c "npm run test:ui" 
    #ports:
    #  - "51204:51204"
    volumes:
      - ./CMS-WEB-FRONTEND:/CMS-WEB-FRONTEND

  database:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: Django
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5440:5432"

  # ....
  #keycloak2:
  #  image: quay.io/keycloak/keycloak:21.0.0 
  #  container_name: keycloak
  #  environment:
  #    KC_HOSTNAME: localhost
  #    KEYCLOAK_ADMIN: admin      
  #    KEYCLOAK_ADMIN_PASSWORD: admin  
  #    DB_VENDOR: h2              #  H2 database
  #    KC_HOSTNAME_PORT: 7080
  #    KC_HEALTH_ENABLED: "true"
  #  ports:
  #    - "7080:7080"
  #    - "7443:7443"
  #  networks:
  #    - keycloak_network
  #  healthcheck:
  #    test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
  #    interval: 15s
  #    timeout: 2s
  #    retries: 15
  #  command: ["start-dev", "--http-port", "7080", "--https-port", "7443"]
  #  volumes:
  #    - keycloak_data:/opt/keycloak/data

  
volumes:
  postgres-data:
  keycloak_data:
    driver: local

networks:
  keycloak_network:
    driver: bridge